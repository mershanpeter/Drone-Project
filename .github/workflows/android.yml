name: Build DroneApp APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 1️⃣ Install system dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          zip unzip openjdk-17-jdk \
          autoconf automake libtool \
          pkg-config zlib1g-dev libncurses5-dev \
          libffi-dev libssl-dev git \
          python3-dev python3-setuptools python3-wheel curl

    # 2️⃣ Install Buildozer and dependencies
    - name: Install Buildozer and Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install "buildozer==1.5.0" "cython<3.0" "setuptools<70"

    # 3️⃣ Setup Android SDK
    - name: Setup Android SDK
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        mkdir -p $ANDROID_HOME/cmdline-tools
        cd $ANDROID_HOME/cmdline-tools
        curl -fo tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -o tools.zip
        mv cmdline-tools latest

        # Add SDK tools to PATH
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

        # Accept licenses
        yes | sdkmanager --licenses

        # Install required SDKs and Build-Tools
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"
        yes | sdkmanager --licenses

    # 4️⃣ Set environment variables for Buildozer
    - name: Set environment variables
      run: |
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV

    # 5️⃣ Clean previous Buildozer cache
    - name: Clean Buildozer cache
      run: rm -rf ~/.buildozer

    # 6️⃣ Build the APK
    - name: Build APK
      working-directory: DroneApp
      run: buildozer -v android debug

    # 7️⃣ Prepare APK artifact
    - name: Prepare APK artifact (zip)
      run: |
        mkdir -p artifacts
        zip -j artifacts/DroneApp-APKs.zip DroneApp/bin/*.apk

    # 8️⃣ Upload APK artifact
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: DroneApp-APK
        path: artifacts/DroneApp-APKs.zip
