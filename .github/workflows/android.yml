name: Build DroneApp APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:$PATH
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip openjdk-17-jdk \
            autoconf automake libtool \
            pkg-config zlib1g-dev libncurses5-dev \
            libffi-dev libssl-dev git \
            python3-dev python3-setuptools python3-wheel

      - name: Install stable Buildozer + dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install "buildozer==1.5.0" "cython<3.0" "setuptools<70"

      - name: Download Android command line tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -fo tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip tools.zip -d latest

      - name: Install Android SDK components
        run: |
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Clean previous Buildozer builds
        run: rm -rf ~/.buildozer

      - name: Build APK
        working-directory: DroneApp
        run: buildozer -v android debug

      - name: Prepare APK artifact
        run: |
          mkdir -p artifacts
          zip -j artifacts/DroneApp-APK.zip DroneApp/bin/*.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DroneApp-APK
          path: artifacts/DroneApp-APK.zip
