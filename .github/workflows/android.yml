name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Buildozer and Android SDK/NDK
        uses: actions/cache@v4
        with:
          path: |
            .buildozer
            ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip python3-setuptools \
            autoconf automake libtool \
            openjdk-17-jdk unzip zip wget git pkg-config build-essential

      - name: Install Buildozer and Python-for-Android
        run: |
          python3 -m pip install --upgrade pip
          pip install --upgrade buildozer cython python-for-android==2025.9.3

      - name: Add Python local bin to PATH
        run: |
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Install Android SDK Command-line Tools & Accept Licenses
        run: |
          ANDROID_SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mv cmdline-tools latest
          rm cmdline-tools.zip
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses
          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "platforms;android-33" "build-tools;36.1.0"

      - name: Fix sdkmanager path for Buildozer
        run: |
          ANDROID_SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/tools/bin"
          ln -s "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_SDK_ROOT/tools/bin/sdkmanager"

      - name: Build APK with Buildozer (P4A bootstrap)
        run: |
          buildozer android debug \
            --bootstrap=p4a \
            --arch=arm64-v8a \
            --arch=armeabi-v7a \
            --storage-dir=$HOME/.buildozer \
            --ignore-setup-py \
            --verbose

      - name: Rename APK with version
        run: |
          APP_NAME="DroneApp"
          VERSION=$(grep "version =" buildozer.spec | cut -d'=' -f2 | xargs)
          mv bin/*.apk "bin/${APP_NAME}-v${VERSION}-debug.apk"
          echo "APK_NAME=${APP_NAME}-v${VERSION}-debug.apk" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DroneApp-APK
          path: bin/*.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: DroneApp v${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: softprops/action-gh-release@v1
        with:
          files: bin/${{ env.APK_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
