name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            zip unzip openjdk-17-jdk \
            autoconf automake libtool \
            pkg-config zlib1g-dev libncurses5-dev \
            libffi-dev libssl-dev git \
            python3-dev python3-setuptools python3-wheel

      # 3. Install Buildozer + dependencies
      - name: Install buildozer + dependencies
        run: |
          pip install --upgrade pip
          pip install "buildozer==1.5.0" "cython<3.0" "setuptools<70"

      # 4. Install Android SDK + Build-tools and accept licenses
      - name: Install Android SDK + Build-tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          cd $HOME/android-sdk/cmdline-tools

          # Download and unzip command-line tools
          curl -fo tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -o tools.zip -d latest

          # Set environment variables
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH

          # Verify sdkmanager exists
          ls -l $ANDROID_HOME/cmdline-tools/latest/bin

          # Accept licenses and install required packages
          yes | sdkmanager --licenses || true
          sdkmanager --update
          yes | sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "build-tools;36.1.0"
          yes | sdkmanager --licenses

      # 5. Clean previous Buildozer cache
      - name: Clean buildozer cache
        run: rm -rf ~/.buildozer

      # 6. Build APK
      - name: Build APK
        working-directory: DroneApp
        run: buildozer -v android debug

      # 7. Prepare APK artifact (zip)
      - name: Prepare APK artifact (zip)
        run: |
          mkdir -p artifacts
          zip -j artifacts/DroneApp-APKs.zip DroneApp/bin/*.apk

      # 8. Upload APK artifact using upload-artifact v4
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DroneApp-APK
          path: artifacts/DroneApp-APKs.zip
