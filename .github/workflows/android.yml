name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set_version.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip python3-setuptools \
            autoconf automake libtool \
            openjdk-17-jdk unzip zip wget git pkg-config build-essential

      - name: Install Buildozer, P4A, and Kivy
        run: |
          python3 -m pip install --upgrade pip setuptools wheel Cython
          pip install buildozer==1.5.0 python-for-android==2024.1.21 kivy==2.3.0

      - name: Set Environment Variables
        run: |
          echo "ANDROIDSDK=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROIDNDK=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
          echo "ANDROIDAPI=33" >> $GITHUB_ENV
          echo "ANDROIDMINAPI=21" >> $GITHUB_ENV
          echo "JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64" >> $GITHUB_ENV
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Download NDK r25b if missing
        run: |
          if [ ! -d "$ANDROIDNDK" ]; then
            mkdir -p $ANDROIDNDK
            wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O ndk.zip
            unzip -q ndk.zip -d $(dirname $ANDROIDNDK)
            rm ndk.zip
          fi

      - name: Install Android SDK Command-line Tools & Accept Licenses
        run: |
          mkdir -p $ANDROIDSDK/cmdline-tools
          cd $ANDROIDSDK/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mv cmdline-tools latest
          rm cmdline-tools.zip
          export PATH=$ANDROIDSDK/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --sdk_root=$ANDROIDSDK --licenses
          sdkmanager --sdk_root=$ANDROIDSDK "platform-tools" "platforms;android-33" "build-tools;36.1.0"

      - name: Build APK
        run: |
          buildozer -v android debug \
            --bootstrap=p4a \
            --arch=arm64-v8a \
            --arch=armeabi-v7a \
            --storage-dir=$HOME/.buildozer \
            --ignore-setup-py

      - name: Set version and rename APK
        id: set_version
        run: |
          APP_NAME="DroneApp"
          VERSION=$(grep "version =" buildozer.spec | cut -d'=' -f2 | xargs)
          mv bin/*.apk "bin/${APP_NAME}-v${VERSION}-debug.apk"
          echo "APK_NAME=${APP_NAME}-v${VERSION}-debug.apk" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "::set-output name=VERSION::$VERSION"

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DroneApp-APK
          path: bin/*.apk

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          path: ./release_apks

      - name: Create Versioned Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build.outputs.VERSION || '1.0.0' }}
          name: DroneApp v${{ needs.build.outputs.VERSION || '1.0.0' }}
          draft: false
          prerelease: false
          files: ./release_apks/**/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Latest Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: DroneApp Latest Build
          draft: false
          prerelease: false
          files: ./release_apks/**/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
