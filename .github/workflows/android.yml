name: Build DroneApp APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      # 3️⃣ Install dependencies for Buildozer and Python packages
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "buildozer==1.5.0" "cython<3.0" "setuptools<70"

      # 4️⃣ Install Android SDK Command-line tools and build-tools
      - name: Setup Android SDK
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -fo tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -o tools.zip -d latest
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # 5️⃣ Clean previous Buildozer cache
      - name: Clean Buildozer cache
        run: rm -rf ~/.buildozer

      # 6️⃣ Build APK
      - name: Build APK
        working-directory: DroneApp
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          buildozer -v android debug

      # 7️⃣ Prepare APK artifact for download
      - name: Prepare APK artifact
        run: |
          mkdir -p artifacts
          zip -j artifacts/DroneApp-APKs.zip DroneApp/bin/*.apk

      # 8️⃣ Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DroneApp-APK
          path: artifacts/DroneApp-APKs.zip
