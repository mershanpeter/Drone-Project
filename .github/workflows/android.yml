name: Build DroneApp APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:$PATH

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y zip unzip openjdk-17-jdk autoconf automake libtool \
          pkg-config zlib1g-dev libncurses5-dev libffi-dev libssl-dev git \
          python3-dev python3-setuptools python3-wheel wget

      - name: Install Buildozer and dependencies
        run: |
          pip install --upgrade pip
          pip install "buildozer==1.5.0" "cython<3.0" "setuptools<70"

      - name: Setup Android SDK command-line tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
          unzip tools.zip
          mv cmdline-tools latest
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Clean Buildozer cache
        run: rm -rf ~/.buildozer

      - name: Build APK
        working-directory: DroneApp
        run: buildozer -v android debug

      - name: Prepare APK artifact
        run: |
          mkdir -p artifacts
          zip -j artifacts/DroneApp-APKs.zip DroneApp/bin/*.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DroneApp-APK
          path: artifacts/DroneApp-APKs.zip
